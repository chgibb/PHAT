/*
QCReportCopy
	Extract FastQC report artifacts from a FastQC artifact directory.
	Also deletes output archive artifact_fastqc.zip
	Given ./QCReportCopy test_fastqc dest/test;
		Copies test_fastqc/fastqc_report.html, test_fastqc/summary.txt, test_fastqc/fastqc_data.txt to dest/test/
		Overwrites dest if it already exists.
		Delete test_fastqc and test_fastqc.zip
		
	Assumes artifacts are generated by PHAT's modified version of the original FastQC by Dr.Simon Andrews.
	PHAT's FastQC produces artifact_fastqc directory and artifact_fastqc.zip

	Returns 0 on success, 1 on out of disk space, 2 on missing arguments.
	
	D is somewhat obscure/verbose, however it's standard library has extremely simple, portable file copying functions.
	This application was initially implemented in C++ using Boost::FileSystem, however Boost sucks to build on Windows so it was eventually scrapped.
	I also desperately want to avoid writing a file copier by hand.
		
	Part of the PHAT Project
	Author : gibbc@tbh.net
*/
import std.stdio;
import std.file;
import core.exception;
import qcartifacts;
version(Windows)
{
	import std.windows.syserror;
}
int main(string[] args)
{
	string report = "";
	string destination = "";
	try
	{
		//report should be the absolute path to the artifact directory
		report = args[1];
		//destination should be the absolute path to the directory to place sub artifacts
		destination = args[2];
	}
	catch(core.exception.RangeError e)
	{
		return 2;
	}
	bool res = qcartifacts.makeDestDir(destination);
	//Could not make destination. Out of diskspace or was passed a path with more than one non existent directory.
	if(!res)
		return 1;
	res = qcartifacts.copyArtifacts(report,destination);
	//Out of disk space
	if(!res)
		return 1;
	qcartifacts.removeSourceReport(report);
	return 0;
}